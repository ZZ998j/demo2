#配置根Logger
log4j.rootLogger=info,demo1,demo2,demo3

### 输出到控制台 ###
#org.apache.log4j.ConsoleAppender （控制台），
#org.apache.log4j.FileAppender （文件），
#org.apache.log4j.DailyRollingFileAppender （每天产生一个日志文件），
#org.apache.log4j.RollingFileAppender （文件大小到达指定尺寸的时候产生一个新的文件），
#org.apache.log4j.WriterAppender （将日志信息以流格式发送到任意指定的地方）
log4j.appender.demo1 = org.apache.log4j.ConsoleAppender
log4j.appender.demo1.Target = System.out
log4j.appender.demo1.layout = org.apache.log4j.PatternLayout
log4j.appender.demo1.layout.ConversionPattern =  %d{ABSOLUTE} %5p %c{ 1 }:%L - %m%n

### 输出到日志文件 ###
#org.apache.log4j.HTMLLayout （以HTML表格形式布局），
#org.apache.log4j.PatternLayout （可以灵活地指定布局模式），
#org.apache.log4j.SimpleLayout （包含日志信息的级别和信息字符串），
#org.apache.log4j.TTCCLayout （包含日志产生的时间、线程、类别等等信息）
log4j.appender.demo2 = org.apache.log4j.DailyRollingFileAppender
log4j.appender.demo2.File = logs/log.log
log4j.appender.demo2.Append = true
log4j.appender.demo2.Threshold = info ## 输出DEBUG级别以上的日志
log4j.appender.demo2.layout = org.apache.log4j.PatternLayout
log4j.appender.demo2.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

### 保存异常信息到单独文件 ###
log4j.appender.demo3 = org.apache.log4j.DailyRollingFileAppender
log4j.appender.demo3.File = logs/error.log ## 异常日志文件名
log4j.appender.demo3.Append = true
log4j.appender.demo3.Threshold = ERROR ## 只输出ERROR级别以上的日志!!!
log4j.appender.demo3.layout = org.apache.log4j.PatternLayout
log4j.appender.demo3.layout.ConversionPattern = %-d{yyyy-MM-dd HH:mm:ss}  [ %t:%r ] - [ %p ]  %m%n

log4j.logger.com.ibatis=info
log4j.logger.com.ibatis.common.jdbc.SimpleDataSource=info
log4j.logger.com.ibatis.common.jdbc.ScriptRunner=info
log4j.logger.com.ibatis.sqlmap.engine.impl.SqlMapClientDelegate=info
log4j.logger.java.sql=info
log4j.logger.java.sql.Connection=info
log4j.logger.java.sql.Statement=info
log4j.logger.java.sql.PreparedStatement=info
log4j.logger.java.sql.ResultSet=info